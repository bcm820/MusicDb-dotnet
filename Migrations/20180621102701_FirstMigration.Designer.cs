// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MusicDb.Models;

namespace MusicDb.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20180621102701_FirstMigration")]
    partial class FirstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.0-rtm-30799")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("MusicDb.Models.Artist", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("Image");

                    b.Property<string>("Instagram");

                    b.Property<string>("Name");

                    b.Property<string>("Twitter");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<string>("Url");

                    b.HasKey("Id");

                    b.ToTable("Artists");
                });

            modelBuilder.Entity("MusicDb.Models.ArtistLike", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long?>("ArtistId");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<long?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("ArtistId");

                    b.HasIndex("UserId");

                    b.ToTable("ArtistLikes");
                });

            modelBuilder.Entity("MusicDb.Models.Song", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long?>("ArtistId");

                    b.Property<string>("ArtistName");

                    b.Property<long>("ArtistUID");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("Title");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<string>("Url");

                    b.HasKey("Id");

                    b.HasIndex("ArtistId");

                    b.ToTable("Songs");
                });

            modelBuilder.Entity("MusicDb.Models.SongLike", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<long?>("SongId");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<long?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("SongId");

                    b.HasIndex("UserId");

                    b.ToTable("SongLikes");
                });

            modelBuilder.Entity("MusicDb.Models.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("Password");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MusicDb.Models.ArtistLike", b =>
                {
                    b.HasOne("MusicDb.Models.Artist", "Artist")
                        .WithMany("Likes")
                        .HasForeignKey("ArtistId");

                    b.HasOne("MusicDb.Models.User", "User")
                        .WithMany("Artists")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("MusicDb.Models.Song", b =>
                {
                    b.HasOne("MusicDb.Models.Artist", "Artist")
                        .WithMany("Songs")
                        .HasForeignKey("ArtistId");
                });

            modelBuilder.Entity("MusicDb.Models.SongLike", b =>
                {
                    b.HasOne("MusicDb.Models.Song", "Song")
                        .WithMany("Likes")
                        .HasForeignKey("SongId");

                    b.HasOne("MusicDb.Models.User", "User")
                        .WithMany("Songs")
                        .HasForeignKey("UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
